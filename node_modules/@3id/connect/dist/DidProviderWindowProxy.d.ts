import type { DIDMethodName, DIDProvider, DIDProviderMethods } from 'dids';
import { RPCClient, RPCResponse, RPCRequest } from 'rpc-utils';
export declare class DidProviderWindowProxy implements DIDProvider {
    _client: RPCClient<DIDProviderMethods>;
    constructor(target: Window, namespace?: string);
    get isDidProvider(): boolean;
    send<Name extends DIDMethodName>(msg: RPCRequest<DIDProviderMethods, Name>): Promise<RPCResponse<DIDProviderMethods, Name> | null>;
}
